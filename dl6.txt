import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

data = np.sin(np.linspace(0, 100, 500))  # sine wave pattern
sequence_length = 10

X, y = [], []
for i in range(len(data) - sequence_length):
    X.append(data[i:i+sequence_length])
    y.append(data[i+sequence_length])

X = np.array(X)
y = np.array(y)

# Reshape for LSTM [samples, timesteps, features]
X = X.reshape((X.shape[0], X.shape[1], 1))

model = Sequential([
    LSTM(64, input_shape=(sequence_length, 1)),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse')

model.fit(X, y, epochs=10, batch_size=32)

# 4. Predict the next value
last_sequence = X[-1].reshape(1, sequence_length, 1)
predicted = model.predict(last_sequence)
print("Next predicted value:", predicted[0][0])