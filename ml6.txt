# Logistic Regression Confusion Matrix
cm_lr = confusion_matrix(y_test, y_pred_lr)
disp_lr = ConfusionMatrixDisplay(confusion_matrix=cm_lr)
disp_lr.plot()
plt.title("Confusion Matrix - Logistic Regression")
plt.savefig('../results/confusion_matrix_logistic_regression.png')
plt.close()



# Random Forest Confusion Matrix
cm_rf = confusion_matrix(y_test, y_pred_rf)
disp_rf = ConfusionMatrixDisplay(confusion_matrix=cm_rf)
disp_rf.plot()
plt.title("Confusion Matrix - Random Forest")
plt.savefig('../results/confusion_matrix_random_forest.png')
plt.close()


# Precision-Recall for Logistic Regression
y_scores_lr = lr_model.predict_proba(X_test)[:, 1]
precision_lr, recall_lr, _ = precision_recall_curve(y_test, y_scores_lr)

disp_pr_lr = PrecisionRecallDisplay(precision=precision_lr, recall=recall_lr)
disp_pr_lr.plot()
plt.title("Precision-Recall Curve - Logistic Regression")
plt.savefig('../results/precision_recall_logistic_regression.png')
plt.close()



# Precision-Recall for Random Forest
y_scores_rf = rf_model.predict_proba(X_test)[:, 1]
precision_rf, recall_rf, _ = precision_recall_curve(y_test, y_scores_rf)

disp_pr_rf = PrecisionRecallDisplay(precision=precision_rf, recall=recall_rf)
disp_pr_rf.plot()
plt.title("Precision-Recall Curve - Random Forest")
plt.savefig('../results/precision_recall_random_forest.png')
plt.close()
